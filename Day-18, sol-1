class Solution{   
public:
    
    bool isPrime(int n)
    {
        for(int i = 2;i*i<=n;i++)
        {
            if(n%i==0) return false;
        }
        return true;
    }

    int firingEmployees(vector<int> &arr, int n){
        unordered_map<int, vector<int>> m;
        int p;
        
        for(int i=0;i<n;i++){
            if(arr[i]==0){
                p=i+1;
            }else{
                m[arr[i]].push_back(i+1);
            }
        }
        
        int ans = 0;
        queue<int> q;
        
        for(auto x : m[p]){
            q.push(x);
        }
        
        int seniors = 0;
        
        while(q.size()){
            
            int n = q.size();
            seniors++;
            
            while(n--){
                
                int idx = q.front();
                q.pop();
                
                if(isPrime(idx+seniors)){
                    ans++;
                }
                
                for(auto x : m[idx]){
                    q.push(x);
                }
                
            }
            
        }
        
        return ans;
  
    }
};

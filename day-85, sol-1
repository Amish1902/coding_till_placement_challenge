class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int k) {
        vector<vector<int>> adj(n, vector<int> (n, -1));
        for(int i = 0; i < flights.size(); i++) {
            adj[flights[i][0]][flights[i][1]] = flights[i][2];
        }
        
        vector<int> prev(n, 0), cur(n, 0);

        for(int stops = 0; stops <= k+1; stops++) {
            for(int source = n-1; source >= 0; source--) {
                if(source == dst) cur[source] = 0;
                else {
                    int ans = 1e7;
                    for(int i = 0; i < n; i++) {
                        if(adj[source][i] != -1) {
                            int tp = (stops == 0 ? 1e7 : adj[source][i]+prev[i]);
                            ans = min(ans, tp);
                        }
                    }
                    cur[source] = ans;
                }
            }
            prev = cur;
        }

        int val = prev[src];
        return (val == 1e7 ? -1 : val);
    }
};

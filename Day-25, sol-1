class Solution
{
    public:
    int m,n;
    
    void dfs(int i,int j,vector<vector<char>>& grid){
        if(i>=n||j>=m||i<0||j<0||grid[i][j]=='O'){
            return;
        }
        grid[i][j]='O';
        
        dfs(i+1,j,grid);
        dfs(i,j+1,grid);
        dfs(i,j-1,grid);
        dfs(i-1,j,grid);
        
    }
    //Function to find the number of 'X' total shapes.
    int xShape(vector<vector<char>>& grid) 
    {
n=grid.size();
m=grid[0].size();
int result=0;
for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
        if(grid[i][j]=='X'){
            result++;
            dfs(i,j,grid);
        }
    }
}return result;
        
        
        // Code here
    }
};

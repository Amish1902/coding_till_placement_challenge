#include<iostream>
using namespace std;

class Node
{
    public:
    int data;
    Node* next;
    
    //constructor
    Node(int data)
    {
        this -> data = data;
        this -> next = NULL;
    }
    
    //destructor
    ~Node()
    {
    int value = this -> data;
    //memory free
    if(this->next != NULL)
    {
        delete next;
        this -> next = NULL;
    }
    cout<< " memory is free for node with data:"<< value<<endl;
    }
};

void Insert_at_head(Node* &head, int d)
{
    Node* temp = new Node(d);
    temp -> next = head;
    head = temp;
}

void Insert_at_tail(Node* &tail, int d)
{
    Node* temp = new Node(d);
    tail -> next = temp;
    tail = temp;
}

void print(Node* &head)
{
    Node* temp = head;
    
    while(temp != NULL)
    {
        cout<< temp->data<<" ";
        temp = temp->next;
    }
    cout<<endl;
}

void Insert_at_position(Node* &tail,Node* &head, int position, int d)
{
    if(position==1)
    {
        Insert_at_head(head,d);
        return;
    }
    
    Node* temp = head;
    int cnt=1;
    
    while(cnt < position-1)
    {
        temp = temp -> next;
        cnt++;
    }
    
    if(temp -> next == NULL)
    {
        Insert_at_tail(tail,d);
        return;
    }
    
    Node* nodetoinsert = new Node(d);
    
    nodetoinsert -> next = temp -> next;
    
    temp -> next = nodetoinsert;
}

void deleteNode(int position, Node* &head)
{
    //deleting first node
    if(position==1)
    {
        Node* temp = head;
        head = head -> next;
        temp -> next = NULL;
        delete temp;
    }
    
    else
    {
        Node* curr = head;
        Node* prev = NULL;
        
        int cnt=1;
        while(cnt<position)
        {
            prev = curr;
            curr = curr->next;
            cnt++;
        }
        
        prev->next = curr->next;
        curr -> next = NULL;
        delete curr;
    }
}

int main()
{
    Node* node1 = new Node(10);
    //cout<< node1 -> data<<endl;
    //cout<< node1 -> next<<endl;
    
    Node* head = node1;
    Node* tail = node1;
    
    print(head);
    
    Insert_at_tail(tail, 12);
    print(head);
    
    Insert_at_tail(tail,15);
    print(head);
    
    Insert_at_position(tail,head,4,22);
    print(head);
    
    cout<<"head:"<<head->data<<endl;
    cout<<"tail:"<<tail->data<<endl;
    
    deleteNode(3,head);
    print(head);
    
    cout<<"head:"<<head->data<<endl;
    cout<<"tail:"<<tail->data<<endl;
    return 0;
}

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<int> postorderTraversal(TreeNode* root) {
        vector<int> ans;
        if(root==NULL)
        {
            return ans;
        }
        TreeNode* current, *prev;
        current=root;

        while(current!=NULL)
        {
            if(current->left==NULL)
            {
                ans.push_back(current->val);
                current=current->right;
            }
            else
            {
                prev=current->left;
                while(prev->right!=NULL && prev->right!=current)
                {
                    prev=prev->right;
                }

                if(prev->right==NULL)
                {
                    prev->right=current;
                    ans.push_back(current->val);
                    current=current->left;
                }

                else
                {
                    prev->right=NULL;
                    current=current->right;
                }
            }
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};

class Solution {
public:
    int minJumps(vector<int>& arr) {
        int n = arr.size();
        vector<bool>vis(n, false);
        unordered_map<int, vector<int> >mp;
        for(int i = 0; i < n; i++)
            mp[arr[i]].push_back(i);
        queue<int>q;
        q.push(0);
        vis[0] = true;
        int step = 0;
        while(!q.empty()) {
            int sz = q.size();
            while(sz--) {
                int i = q.front();
                q.pop();
                if(i == n-1)return step;
                if(i+1 < n && !vis[i+1])vis[i+1] = true, q.push(i+1);
                if(i-1 >= 0 && !vis[i-1])vis[i-1] = true, q.push(i-1);
                for(auto &j : mp[arr[i]])
                    if(!vis[j])vis[j] = true, q.push(j);
                mp.erase(arr[i]); // Comment this line..You will get TLE
            }
            step++;
        }
        return -1;
    }
};

class Solution {
public:

bool can_eat_all(vector<int>& piles,int given_hour, int h)
{
    int actual_hour=0;

    for(int &x : piles)
    {
        actual_hour+=x/given_hour;

        if(x%given_hour!=0)
        {
        actual_hour++;
        }
    }
    return actual_hour<=h;
}

    int minEatingSpeed(vector<int>& piles, int h) {
        int l=1;
        int r= *max_element(begin(piles),end(piles));

        while(l<r)
        {
            int mid= l+ (r-l)/2;
            if(can_eat_all(piles,mid,h))
            {
                r=mid;
            }
            else
            {
                l=mid+1;
            }
        }
        return l;
    }
};

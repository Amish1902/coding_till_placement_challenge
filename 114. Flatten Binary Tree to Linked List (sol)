/**
recursive approach
 */
class Solution {
public:

TreeNode* prev = NULL;

    void flatten(TreeNode* root) {
        if(!root)
        {
            return;
        }

        flatten(root->right);
        flatten(root->left);

        root->right=prev;
        root->left=NULL;

        prev=root;
    }
};


/**
morris traversal
 */
class Solution {
public:
    void flatten(TreeNode* root) {
        if(!root)
        {
            return;
        }
        TreeNode* curr = root;
        while(curr)
        {
            if(curr->left != NULL)
            {
            TreeNode* prev = curr->left;
            while(prev->right)
                prev=prev->right;
                prev->right=curr->right;
                curr->right=curr->left;
            }
            curr->left=NULL;
            curr=curr->right;
        }
    }
};

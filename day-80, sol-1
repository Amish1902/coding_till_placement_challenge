class Solution {
public:

ListNode* reverse(ListNode* curr)
        {
            ListNode* prev = NULL;
            ListNode* next = curr;
            while(curr!=NULL)
            {
            next = curr->next;
            curr->next = prev;
            prev=curr;
            curr=next;
            }
            return prev;
        }

    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* a = reverse(l1);
        ListNode* b = reverse(l2);
        ListNode* ans = NULL;
        ListNode* curr = NULL;

        int carry=0;
        while(a!=0 && b!=0)
        {
            int val = a->val + b->val + carry;
            carry=val/10;
            val=val%10;
            ListNode* newnode = new ListNode(val);

            if(!ans)
            {
                ans=newnode;
                curr=newnode;
            }
            else
            {
                curr->next=newnode;
                curr=newnode;
            }
            a=a->next;
            b=b->next;
        }

        while(a)
        {
            int val = a->val +carry;
            carry=val/10;
            val=val%10;
            ListNode* newnode = new ListNode(val);
            curr->next=newnode;
            curr=newnode;
            a=a->next;
        }

        while(b)
        {
            int val = b->val +carry;
            carry=val/10;
            val=val%10;
            ListNode* newnode = new ListNode(val);
            curr->next=newnode;
            curr=newnode;
            b=b->next;
        }

        if(carry)
        {
            curr->next=new ListNode(carry);
        }
        return reverse(ans);
    }
};

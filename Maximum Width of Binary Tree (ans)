/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
typedef unsigned long long ll;
    int widthOfBinaryTree(TreeNode* root) {
        queue<pair<TreeNode*, ll>>que;
        que.push({root,0});

        ll max_width = 0;

        while(!que.empty())
        {
            ll left = que.front().second;
            ll right = que.back().second;

            max_width = max(max_width, right-left+1);

            int n = que.size();

            while(n--)
            {
                TreeNode* curr = que.front().first;
                ll idx = que.front().second;
                que.pop();

                if(curr->left != NULL)
                {
                    que.push({curr->left, 2*idx + 1});
                }

                if(curr->right != NULL)
                {
                    que.push({curr->right, 2*idx + 2});
                }
            }
        }
        return max_width;
    }
};
